# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.flatten as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.flatten_iter(none_type_0)
    str_0 = "iteration"
    var_1 = module_0.flatten(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 30
    module_0.flatten(int_0, int_0)


def test_case_2():
    str_0 = "DCXXI"
    var_0 = module_0.flatten(str_0)
    var_1 = module_0.flatten_iter(var_0)
    set_0 = set()
    var_2 = module_0.flatten_iter(var_0)
    var_3 = module_0.flatten_iter(set_0)
    tuple_0 = module_0.flatten_iter(var_2)
    var_4 = module_0.flatten(set_0)
    var_5 = module_0.flatten(tuple_0)


def test_case_3():
    bytes_0 = b"\xc9\xa0"
    var_0 = module_0.flatten_iter(bytes_0)


def test_case_4():
    bytes_0 = b"4\x07a\xba"
    var_0 = module_0.flatten_iter(bytes_0)
    var_1 = module_0.flatten(bytes_0)
    var_2 = module_0.flatten_iter(var_1)


def test_case_5():
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_0, bool_1)
    var_0 = module_0.flatten(tuple_0)
    str_0 = "7+=T&;*V\n\r0\r)jj@cr"
    var_1 = module_0.flatten_iter(var_0)
    var_2 = module_0.flatten_iter(str_0)
    var_3 = module_0.flatten_iter(str_0)
    var_4 = module_0.flatten_iter(str_0)
    var_5 = module_0.flatten(var_1)


def test_case_6():
    str_0 = "DCXXI"
    var_0 = module_0.flatten(str_0)
    var_1 = module_0.flatten_iter(var_0)
    set_0 = set()
    var_2 = module_0.flatten(set_0)
    var_3 = module_0.flatten_iter(set_0)
    tuple_0 = (set_0,)
    var_4 = module_0.flatten(set_0)
    var_5 = module_0.flatten(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\x02\xe6R\xdc\x1d\xdeW\xf5\xe9\xeeo\xa0\xb7\x9a\xaa"
    var_0 = module_0.flatten_iter(bytes_0)
    str_0 = "XL"
    var_1 = module_0.flatten_iter(str_0)
    var_2 = module_0.flatten(str_0)
    var_3 = module_0.flatten_iter(bytes_0)
    var_4 = module_0.flatten(str_0)
    var_5 = module_0.flatten_iter(bytes_0)
    set_0 = {var_5, bytes_0}
    var_6 = module_0.flatten_iter(var_5)
    var_7 = module_0.flatten_iter(set_0)
    none_type_0 = None
    var_8 = module_0.flatten_iter(var_4)
    var_9 = module_0.flatten(var_7)
    var_10 = module_0.flatten(set_0)
    var_11 = module_0.flatten_iter(var_1)
    var_12 = module_0.flatten(var_1)
    var_13 = module_0.flatten_iter(none_type_0)
    module_1.object(**none_type_0)
